///////////////////////////////////////////////////////////////////////////////
// # License
// <b>Copyright 2022  Silicon Laboratories Inc. www.silabs.com</b>
///////////////////////////////////////////////////////////////////////////////
// The licensor of this software is Silicon Laboratories Inc. Your use of this
// software is governed by the terms of Silicon Labs Master Software License
// Agreement (MSLA) available at
// www.silabs.com/about-us/legal/master-software-license-agreement. This
// software is distributed to you in Source Code format and is governed by the
// sections of the MSLA applicable to Source Code.
//
///////////////////////////////////////////////////////////////////////////////

/// Include the source code of the binding file generated by cargo-bindgen. As
/// argument pass the name that is given for the binding_generator
/// configuration. See the cmake function `generate_rust_bindings`
///
/// Bindings are generated inside a module equivalent to the passed name. e.g.
/// when declaring `include_binding!(foo);`, binding functions can be accessed
/// by `foo::my_extern_c_func()`
#[macro_export]
macro_rules! include_binding {
    ($name:ident) => {
        mod $name {
            #![allow(
                missing_docs,
                dead_code,
                non_snake_case,
                non_camel_case_types,
                non_upper_case_globals
            )]
            use super::*;
            
            use unify_tools::platform_type_mapping::ctypes;
            include!(concat!(
                env!("UIC_OUT"),
                "/bindings/",
                stringify!($name),
                ".rs"
            ));
        }
    };
}
