initSidebarItems({"enum":[["zwave_controller_encapsulation_scheme_t","Encapsulation schemes"]],"fn":[["zwave_command_handler_controls","@brief Check if we control a given command class"],["zwave_command_handler_dispatch","@brief Dispatches a frame to its respective Command Class handler"],["zwave_command_handler_get_version","@brief Get the version of Command Class that the handler handles."],["zwave_command_handler_init","@brief Initialize the command handlers. @returns SL_STATUS_OK, it will always be considered as successful."],["zwave_command_handler_print_info","@brief Print Command Class Version info"],["zwave_command_handler_register_handler","@brief Register a command class handler."],["zwave_command_handler_teardown","@brief Teardown of the Z-Wave command handler. @returns 0 in case of success."]],"struct":[["zwave_command_handler_t","@brief Z-Wave Command Class handler object"],["zwave_controller_connection_info","@brief Structure holding information about the source and destination when transmitting and receiving Z-Wave frames."]],"type":[["sl_status_t",""],["zwave_command_class_handler_t","@brief This is the function which will be executed when the frame of a given Command Class is received."],["zwave_command_class_t",""],["zwave_controller_connection_info_t","@brief Structure holding information about the source and destination when transmitting and receiving Z-Wave frames."],["zwave_endpoint_id_t",""],["zwave_multicast_group_id_t",""],["zwave_node_id_t","Z-Wave NodeID type"]]});