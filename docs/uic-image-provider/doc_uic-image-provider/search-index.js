var searchIndex = JSON.parse('{\
"uic_image_provider":{"doc":"UIC IMAGE PROVIDER Is an UIC helper application that …","t":[17,17,17,17,5,0,5,0,0,5,5,5,12,12,13,12,12,3,7,3,3,3,12,13,3,13,13,12,12,13,3,13,3,12,12,12,12,12,12,12,4,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,11,5,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,8,8,6,3,11,11,11,11,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,11,10,12,11,10,11,11,11,11,11,12,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,12,11,11,11,11,11,11,11],"n":["APP_NAME","CONFIG_VERSION","IMAGE_PATH","POLL_PERIOD","get_config","image_watcher","main","mqtt_client","mqtt_handler","ok_or_exit_with_message","parse_application_arguments","run","ApplyAfter","ApplyAfter","FileError","FileName","FileName","IMAGE_MAP","IMG_PATH","ImageEntry","ImageList","ImageWatcher","Images","JsonError","MapEntry","MapEntryError","MapKeyError","Md5","Md5","Md5Error","MetaFile","PathEror","TwoStringsKey","Uiid","Uiid","Unid","Unid","Version","Version","Version","WatchError","__private_field","announce_images","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calc_md5_digest","clone","clone","clone_into","clone_into","default","default","denounce_images","deref","deserialize","deserialize","detected","eq","eq","eq","error_message","file_changed","file_exists","fill_map","fmt","from","from","from","from","from","from","from","from","get_image_file","hash","images_location","initialize","into","into","into","into","into","into","into","into","md5_digest","mqtt_client","ne","ne","ne","new","poll_period","process_metadata","run_image_watcher","serialize","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uiid","unid","MosqMessage","MosquittoClient","MqttClient","MqttMessageReceived","Result","TopicMatcher","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone_into","connect","connect","drop","fmt","from","from","from","into","into","into","mainloop","mainloop","matches","mid","mosq","msg","new","on_message","owned","payload","publish","publish","qos","receive_many","receive_one","retained","sub","subscribe","subscribe","text","tls_set","tls_set","to_owned","topic","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MqttHandler","borrow","borrow_mut","data_publish_trigger_matcher","from","get_uiid_unid_of_topic","into","mqtt_client","new","on_data_publish_trigger","on_message","process_message","try_from","try_into","type_id"],"q":["uic_image_provider","","","","","","","","","","","","uic_image_provider::image_watcher","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uic_image_provider::mqtt_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","uic_image_provider::mqtt_handler","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build topics from map key and send empty payload to topics…","","","","","","","","","","","","","","","","","Calculate and return md5 base64 encoded digest from …","","","","","","","Build topics from map key and send empty payload to topics…","","","","","","","","Print error messages","Check for changes","Check if file exists and return buffer with content","Fill map entry","","","","","","","","","","Get file from Map Should be implemented as queue But it …","","","","","","","","","","","","","","","","","","","Process metadata and insert JSON fields to map","Poll changes in images.json If changes occures: send …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mosquitto message","","interface wrapper of the mosquitto_client, so that we can …","","","Matching subscription topics. Returned from …","","","","","","","","","","","","","","","","","","","","","","true if a message matches a subscription topic","the subscription id.","","","","","","the payload as bytes","","","the quality-of-service of the message. The desired QoS is …","receive and return messages matching this topic, until …","receive and return exactly one message matching this topic","was the message retained by the broker? True if we …","","","","the payload as text. This will <strong>panic</strong> if the payload was …","","","","the topic of the message. This will <strong>panic</strong> if the topic isn…","","","","","","","","","","MqttHandler handles subscription messages related to UIC …","","","","","parse topic message and extract uiid and unid","","Reference counted to the mosquitto-client. Notice that …","crate new handler to be passed into a MqttClient. The …","process a ucl/OTA/data/+/+/get topic and publishes OTA …","public function to be called by the mosquitto fwk on a …","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,2,3,1,2,0,0,0,0,0,4,3,0,3,3,1,2,3,0,3,0,1,2,1,2,4,1,2,0,5,6,6,7,4,1,2,8,3,5,6,7,4,1,2,8,3,5,0,1,8,1,8,4,1,6,5,4,1,7,1,2,8,0,6,0,6,3,6,7,4,1,2,8,3,5,0,8,6,5,6,7,4,1,2,8,3,5,7,6,1,2,8,6,6,6,6,4,1,1,8,6,7,4,1,2,8,3,5,6,7,4,1,2,8,3,5,6,7,4,1,2,8,3,5,8,8,0,0,0,0,0,0,9,10,11,9,10,11,9,10,10,12,9,10,10,9,10,11,9,10,11,12,9,11,11,11,10,9,13,10,10,12,9,10,11,11,10,11,12,9,10,12,9,10,10,9,10,11,9,10,11,9,10,11,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14],"f":[null,null,null,null,[[],[["result",4],["config_status_t",4]]],null,[[],[["result",4],["i32",15]]],null,null,[[["str",15],["result",4],["display",8]],[["result",4],["i32",15]]],[[],[["config_status_t",4],["result",4]]],[[["str",15],["i32",15]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["arc",3],["mosquittoclient",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3]],["string",3]],[[],["imageentry",3]],[[],["twostringskey",3]],[[]],[[]],[[],["imagelist",3]],[[],["imageentry",3]],[[["arc",3],["mosquittoclient",3]]],[[],["mutex",3]],[[],["result",4]],[[],["result",4]],null,[[["imageentry",3]],["bool",15]],[[["mapentry",3]],["bool",15]],[[["twostringskey",3]],["bool",15]],[[["watcherror",4],["string",3]]],[[["vec",3],["metafile",3]],["bool",15]],[[["path",3],["vec",3]],["bool",15]],[[["imageentry",3]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vec",3],["string",3]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["imageentry",3]],["bool",15]],[[["mapentry",3]],["bool",15]],[[["twostringskey",3]],["bool",15]],[[["string",3],["arc",3],["mosquittoclient",3],["i32",15]]],null,[[["vec",3],["imageentry",3]]],[[]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["mosqmessage",3]],[[]],[[["u32",15],["str",15]],["result",6]],[[["u32",15],["str",15]],["result",6]],[[]],[[["formatter",3]],[["error",3],["result",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["mqtthandler",3]],["result",6]],[[["mosqmessage",3]],["bool",15]],null,null,null,[[["str",15]]],[[["mosqmessage",3]]],null,[[]],[[["bool",15],["str",15],["u32",15]],[["result",6],["i32",15]]],[[["bool",15],["str",15],["u32",15]],[["result",6],["i32",15]]],[[],["u32",15]],[[["i32",15]],[["vec",3],["result",4],["error",3]]],[[["i32",15]],[["result",4],["mosqmessage",3],["error",3]]],[[],["bool",15]],null,[[["u32",15],["str",15]],[["topicmatcher",3],["result",6]]],[[["u32",15],["str",15]],[["topicmatcher",3],["result",6]]],[[],["str",15]],[[["path",3]],["result",6]],[[["path",3]],["result",6]],[[]],[[],["str",15]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[]],[[["str",15]],[["string",3],["result",4]]],[[]],null,[[["arc",3],["topicmatcher",3],["mqttclient",8]]],[[["str",15],["jsonvalue",4]],[["string",3],["result",4]]],[[["mosqmessage",3]]],[[["mosqmessage",3]],[["string",3],["result",4]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"ImageEntry"],[3,"MapEntry"],[4,"WatchError"],[3,"ImageList"],[3,"IMAGE_MAP"],[3,"ImageWatcher"],[3,"MetaFile"],[3,"TwoStringsKey"],[3,"MosquittoClient"],[3,"MosqMessage"],[3,"TopicMatcher"],[8,"MqttClient"],[8,"MqttMessageReceived"],[3,"MqttHandler"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};