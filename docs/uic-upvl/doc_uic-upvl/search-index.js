var searchIndex = JSON.parse('{\
"uic_upvl":{"doc":"The UPVL Client manages the SmartStart List topic …","t":[17,17,17,5,5,5,5,0,0,0,17,17,3,11,11,5,5,5,5,5,5,5,12,5,11,11,11,5,12,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,3,3,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12],"n":["CLIENT_NAME","DB_FILE","LOG_TAG","get_config","main","ok_or_exit_with_message","parse_application_arguments","upvl_db","upvl_json","upvl_mqtt","CURRENT_DB_VERSION","LOG_TAG","UpvlDbEntry","borrow","borrow_mut","db_debug_print_provisions","db_list_provisions","db_remove_entry","db_setup","db_teardown","db_upgrade","db_upsert_entry","dsk","entry_merge","fmt","from","into","is_entry_valid","payload","try_from","try_into","type_id","DSK","Payload","SmartStartEntry","borrow","borrow_mut","clone","clone_into","default","eq","fmt","fmt","from","from","from","into","into","into","ne","to_owned","to_string","try_from","try_into","type_id","LOG_TAG","PUB_PREFIX","SUBS_PREFIX","UpvlMqttSession","UpvlMqttSessionData","UpvlSubscribers","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broker","clone","clone_into","db_conn","disconnect","fmt","from","from","from","get_callbacks","into","into","into","loop_forever","mcl","new","new","port","pub_count","publish_list","qos","rec_count","rec_drops","remove_subscriber","run","subscribe","subscribers","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_subscriber"],"q":["uic_upvl","","","","","","","","","","uic_upvl::upvl_db","","","","","","","","","","","","","","","","","","","","","","uic_upvl::upvl_json","","","","","","","","","","","","","","","","","","","","","","","uic_upvl::upvl_mqtt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","UPVL Database Interface","Handle JSON conversion to/from internal types","We use the mosquitto_client crate for the connection to …","Current Database Version. At startup [db_upgrade] checks …","","Type that matches the rows in the database provision …","","","Print out all the provisions.","Print out everything from the data base in json format.","Remove a provision by DSK.","Open the database connection to the specified file. …","Close the database connection.","Checks the database version and upgrades the data within …","Update database for a provision in deserialized json …","","Merge two serde_json::value objects. This will overwrite …","","","","Checks if an entry is valid","","","","","","","A type to represent a provision for one device.","","","","","","","","","","","","","","","","","","","","","The default upvl_mqtt log tag","Logging helper","Logging helper TODO: fancier logging","Type to hold a connection to the broker.","A data-type for the data to send to the mqtt-client …","The subscribers returned by mosquitto_client when we …","","","","","","","","","","A reference to the data store.","Disconnect from this end.","","","","","Get the callbacks handler for the mqtt event callbacks, …","","","","Run the mqtt_client main loop forever.","We use the mosquitto_client crate for the connection to …","","Constructor Set up the connection to the broker","","Number of published messages","Function to publish a Smart Start List from a JSON …","","received messages count","number of received messages dropped because of errors","","","Subscribe to our topics.","The topic matchers returned when subscribing to the …","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,0,1,1,1,0,1,1,1,1,2,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,0,3,4,5,3,4,5,5,5,5,3,5,3,3,4,5,5,3,4,5,5,5,3,5,5,3,5,5,3,3,4,5,5,3,5,3,3,4,5,3,4,5,3,4,5,4],"f":[null,null,null,[[],[["result",4],["config_status_t",4]]],[[],[["i32",15],["result",4]]],[[["result",4],["str",15],["display",8]],[["result",4],["i32",15]]],[[],[["config_status_t",4],["result",4]]],null,null,null,null,null,null,[[]],[[]],[[["connection",3]]],[[["connection",3]],[["value",4],["vec",3]]],[[["smartstartentry",3],["connection",3]],["usize",15]],[[["string",3]],["connection",3]],[[["connection",3]]],[[["connection",3]]],[[["smartstartentry",3],["connection",3]]],null,[[["option",4],["value",4]],[["value",4],["option",4]]],[[["formatter",3]],["result",6]],[[]],[[]],[[["value",4]],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[],["smartstartentry",3]],[[]],[[],["smartstartentry",3]],[[["smartstartentry",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["string",3]]],[[["value",4]]],[[]],[[],["value",4]],[[],["string",3]],[[]],[[["smartstartentry",3]],["bool",15]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["upvlmqttsession",3]],[[]],null,[[],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["callbacks",3]],[[]],[[]],[[]],[[]],null,[[["connection",3]],["upvlmqttsessiondata",3]],[[["u32",15],["str",15]],["upvlmqttsession",3]],null,null,[[["vec",3],["value",4]]],null,null,null,null,[[["upvlmqttsessiondata",3]]],[[],["upvlsubscribers",3]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[3,"UpvlDbEntry"],[3,"SmartStartEntry"],[3,"UpvlMqttSessionData"],[3,"UpvlSubscribers"],[3,"UpvlMqttSession"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};